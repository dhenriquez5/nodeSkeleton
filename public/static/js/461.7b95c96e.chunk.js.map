{"version":3,"file":"static/js/461.7b95c96e.chunk.js","mappings":"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","sources":["Pages/Dashboard/Saldos.jsx","components/Alerts/ErrorAlert.jsx","components/Loadings/Loading.jsx","components/TableGrid/CustomPagination.jsx","components/TableGrid/CustomToolbar.jsx","data/Columns.js","redux/actions/prestamo.actions.js"],"sourcesContent":["import React from 'react'\nimport { DataGrid } from '@mui/x-data-grid'\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetPrestamosActivos, InitPrestamo } from '../../redux/actions/prestamo.actions';\nimport { Loading } from '../../components/Loadings/Loading';\nimport ErrorAlert from '../../components/Alerts/ErrorAlert';\nimport { SaldosColumn } from '../../data/Columns';\nimport { Divider, Typography } from '@mui/material';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport { CustomToolbar } from '../../components/TableGrid/CustomToolbar';\nimport { CustomPagination } from '../../components/TableGrid/CustomPagination';\n\n\nconst Saldos = () => {\n\n    const dispatch = useDispatch();\n    const { prestamos } = useSelector(state => state.prestamo);\n    useEffect(() => {\n        dispatch(InitPrestamo());\n        dispatch(GetPrestamosActivos());\n    }, [])\n\n    const selectItem = () => {\n\n    }\n    return (\n        <>\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                    Saldos\n                </Typography>\n                <AccountBalanceIcon />\n            </div>\n            <Divider />\n            {\n                prestamos && prestamos?.length > 0 && (\n                    <div style={{ marginTop: 20, height: '30rem', width: 'auto', overflow: 'auto', cursor: 'pointer' }}>\n                        <DataGrid\n                            initialState={{\n                                sorting: {\n                                    sortModel: [{ field: 'fullName', sort: 'asc' }]\n                                },\n                            }}\n                            getRowId={(item) => item._id}\n                            density=\"compact\"\n                            rows={prestamos}\n                            columns={SaldosColumn}\n                            pageSize={10}\n                            rowsPerPageOptions={[10]}\n                            loading={false}\n                            onRowClick={selectItem}\n                            // onCellKeyDown={(params, event) => { handleEnter(params, event) }}\n                            editMode='row'\n                            components={{\n                                Toolbar: CustomToolbar,\n                                Pagination: CustomPagination,\n                            }}\n                            // componentsProps={{\n                            //     toolbar: { onClick: handleAdd }\n                            // }}\n                            // checkboxSelection\n                            experimentalFeatures={{ newEditingApi: true }}\n\n                        />\n                        <Loading />\n                        <ErrorAlert />\n                    </div>\n                )\n            }\n        </>\n\n    )\n}\n\nexport default Saldos","import * as React from 'react';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport Stack from '@mui/material/Stack';\nimport { Button, Dialog } from '@mui/material';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiErrorMessage } from '../../redux/actions/ui.actions';\n\nexport default function ErrorAlert() {\n  const {error} = useSelector(state => state.ui);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(uiErrorMessage(null));  \n  }\n\n  return (\n    <>\n      \n      <Dialog open={error!==null}  onClose={handleClick}>\n        <Alert severity=\"error\" onClose={handleClick} >\n          <AlertTitle>Error</AlertTitle>\n          {error}\n        </Alert>\n      </Dialog>\n    </>\n  );\n}","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport './loading.css'\n\nexport const Loading = () => {\n    const { loading } = useSelector(state => state.ui);\n    \n    return (\n        <>\n            {loading && <div className=\"loader text-center\">\n                <div className=\"loader-inner\">\n                    <div className=\"lds-roller mb-3\">\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    </div>\n\n                    <h4 className=\"text-uppercase font-weight-bold\">Loading</h4>\n                </div>\n            </div>}\n        </>\n    )\n}\n","import { gridPageCountSelector, gridPageSelector, useGridApiContext, useGridSelector } from '@mui/x-data-grid';\nimport React from 'react'\nimport Pagination from '@mui/material/Pagination';\nexport const CustomPagination = () => {\n    const apiRef = useGridApiContext();\n    const page = useGridSelector(apiRef, gridPageSelector);\n    const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  \n    return (\n      <Pagination\n        color=\"primary\"\n        count={pageCount}\n        page={page + 1}\n        onChange={(event, value) => apiRef.current.setPage(value - 1)}\n      />\n    );\n}\n","import React from 'react'\nimport { GridToolbarColumnsButton, GridToolbarContainer, GridToolbarDensitySelector, GridToolbarExport, GridToolbarFilterButton, GridToolbarQuickFilter } from '@mui/x-data-grid';\n\nexport const CustomToolbar = ({onClick}) => {\n  return (\n        <GridToolbarContainer sx={{display: 'flex',flexWrap:'wrap',justifyContent: 'center',alignItems:'center',gap:2}}>\n          <GridToolbarColumnsButton />\n          <GridToolbarFilterButton />\n          <GridToolbarDensitySelector />\n          <GridToolbarExport />\n          <GridToolbarQuickFilter/>\n          {/* <Button onClick={onClick} text=\"Agregar Nuevo Usuario\" style={{padding:'0.5rem'}} /> */}\n        </GridToolbarContainer>\n  )\n}\n","export const SaldosColumn = [\n    {\n        field: 'fullName',\n        headerName: 'Nombre',\n        // description: 'This column has a value getter and is not sortable.',\n        // sortable: false,\n        width: 160,\n        valueGetter: (params) =>\n            `${params.row.cliente || ''}`,\n    },\n    {\n        field: 'fecha_prestamo',\n        headerName: 'Fecha Prestamo',\n        width: 120,\n        editable: false,\n        valueFormatter: (params) => params.value.split('T')[0]\n    },\n    {\n        field: 'valor_prestamo',\n        headerName: 'Valor Prestamo',\n        width: 150,\n        editable: false,\n        valueFormatter: (params) => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(params.value)\n    },\n    {\n        field: 'tasa_interes',\n        headerName: 'Tasa',\n        width: 80,\n        editable: false,\n        valueFormatter:(params)=>params.value+'%'\n    },\n    {\n        field: 'capital_actual',\n        headerName: 'Capital',\n        width: 150,\n        editable: false,\n        valueFormatter: (params) => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(params.value)\n    },\n    {\n        field: 'valor_interes',\n        headerName: 'Interes',\n        width: 150,\n        editable: false,\n        valueFormatter: (params) => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(params.value)\n    },\n    {\n        field: 'ultimo_pago',\n        headerName: 'Fecha_corte',\n        width: 120,\n        editable: false,\n        valueGetter: (params) => {\n            if (params?.row.pagos?.length > 0) {\n                let maxDateObject = params.row.pagos.reduce((prev, curr) => {\n                    let prevDate = new Date(prev.date);\n                    let currDate = new Date(curr.date);\n                    return (prevDate > currDate) ? prev : curr;\n                });\n                return (maxDateObject?.fecha_pago).split('T')[0];\n            }\n            return params?.row.fecha_prestamo.split('T')[0]\n        }\n\n    }\n\n\n]\n\nexport const PagosColumns =[\n     {\n        field: 'fullName',\n        headerName: 'Nombre',\n        // description: 'This column has a value getter and is not sortable.',\n        // sortable: false,\n        width: 160,\n        valueGetter: (params) =>\n            `${params.row.cliente || ''}`,\n    },\n    {\n        field: 'fecha_prestamo',\n        headerName: 'Fecha Prestamo',\n        width: 120,\n        editable: false,\n        valueFormatter: (params) => params.value.split('T')[0]\n    },\n    {\n        field: 'valor_prestamo',\n        headerName: 'Valor Prestamo',\n        width: 150,\n        editable: false,\n        valueFormatter: (params) => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(params.value)\n    },\n    {\n        field: 'capital_actual',\n        headerName: 'Capital',\n        width: 150,\n        editable: false,\n        valueFormatter: (params) => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(params.value)\n    },\n    {\n        field: 'fecha_pago',\n        headerName: 'Fecha pago',\n        width: 120,\n        editable: false,\n        valueFormatter: (params) => params.value.split('T')[0]\n    },\n    {\n        field: 'valor_pago',\n        headerName: 'Valor Pago',\n        width: 120,\n        editable: false,\n        valueFormatter: (params) => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(params.value)\n    },\n    {\n        field: 'valor_capital',\n        headerName: 'Valor Capital',\n        width: 120,\n        editable: false,\n        valueFormatter: (params) => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(params.value)\n    },\n    {\n        field: 'valor_interes',\n        headerName: 'Valor Interes',\n        width: 120,\n        editable: false,\n        valueFormatter: (params) => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(params.value)\n    },\n\n]","import { fetchToken } from \"../../helpers/fetch\";\nimport { uiConstants } from \"../constants/ui.constanst\";\nimport { formConstants } from \"../constants/form.constants\";\nimport { PrestamoConstants } from \"../constants/prestamo.constants\";\nimport moment from \"moment\";\n\nexport const CreatePrestamo =({id_cliente,cliente,fecha_prestamo,valor_prestamo,tasa_interes,periodo_pago,observacion})=>{\n    return async(dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            fecha_prestamo = moment(fecha_prestamo).format();  \n            const resp = await fetchToken('prestamos/CreatePrestamo',{id_cliente,cliente,fecha_prestamo,valor_prestamo,tasa_interes,periodo_pago,observacion},'POST');\n            const body = await resp.json();\n            if(body.ok){\n                dispatch({ type: formConstants.formSave});\n                dispatch({ type: PrestamoConstants.Create, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }else{\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n\n        } catch (error) {\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\nexport const UpdatePrestamo = ({_id,id_cliente,cliente,fecha_prestamo,valor_prestamo,tasa_interes,periodo_pago,observacion})=>{\n    return async(dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            fecha_prestamo = moment(fecha_prestamo).format();  \n            const resp = await fetchToken('prestamos/UpdatePrestamo/'+_id,{id_cliente,cliente,fecha_prestamo,valor_prestamo,tasa_interes,periodo_pago,observacion},'PUT');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: formConstants.formSave});\n                dispatch({ type: PrestamoConstants.Create, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\nexport const DeleteCliente = (_id)=>{\n    return async(dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/DeletePrestamo/'+_id,{},'delete');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: formConstants.formDelete});\n                dispatch({ type: PrestamoConstants.Delete, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\nexport const GetPrestamosByCliente = (id_cliente) =>{\n    return async (dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/getPrestamoByCliente/'+id_cliente,{});\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: PrestamoConstants.searchByClientId, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\nexport const InitPrestamo = ()=>{\n    return (dispatch)=>{\n        dispatch({ type: PrestamoConstants.Initial})\n    }\n}\n\nexport const selectPrestamo = (data)=>{\n    return (dispatch)=>{\n        dispatch({ type: PrestamoConstants.Read, payload:data})\n    }\n}\n\nexport const GeneratePago =  (prestamo_id,valor_pagar,fecha_pago,valor_interes,checkFin) =>{\n    return async(dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/generatePago',{prestamo_id,valor_pagar,fecha_pago,valor_interes,checkFin},\"POST\");\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: PrestamoConstants.GeneratePago,payload:body.response});\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\nexport const ReCalculateInteres= (prestamo_id,fecha_corte)=>{\n    return async(dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/reCalcularInteres',{prestamo_id,fecha_corte},\"post\");\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: PrestamoConstants.reCalculateInteres, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\n\nexport const DeletePago = (pago_id,prestamo_id) => {\n    return async(dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/deletePago',{pago_id,prestamo_id},\"POST\");\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: PrestamoConstants.deletePago ,payload:body.response});\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\n\nexport const GetPrestamosActivos = ()=>{\n    return async (dispatch) =>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/getPrestamoActivo',{});\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: PrestamoConstants.getPrestamosActivos ,payload:body.response});\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\nexport const GetProximosCobrar=(fecha_ini,fecha_fin)=>{\n    return async (dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/getProximosCobrar',{fecha_ini,fecha_fin},\"POST\");\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: PrestamoConstants.searchByClientId ,payload:body.response});\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}"],"names":["dispatch","useDispatch","prestamos","useSelector","state","prestamo","useEffect","InitPrestamo","GetPrestamosActivos","style","display","justifyContent","alignItems","variant","gutterBottom","length","marginTop","height","width","overflow","cursor","initialState","sorting","sortModel","field","sort","getRowId","item","_id","density","rows","columns","SaldosColumn","pageSize","rowsPerPageOptions","loading","onRowClick","editMode","components","Toolbar","CustomToolbar","Pagination","CustomPagination","experimentalFeatures","newEditingApi","ErrorAlert","error","ui","handleClick","uiErrorMessage","open","onClose","severity","Loading","className","apiRef","useGridApiContext","page","useGridSelector","gridPageSelector","pageCount","gridPageCountSelector","color","count","onChange","event","value","current","setPage","onClick","sx","flexWrap","gap","headerName","valueGetter","params","row","cliente","editable","valueFormatter","split","Intl","NumberFormat","currency","format","pagos","maxDateObject","reduce","prev","curr","Date","date","fecha_pago","fecha_prestamo","PagosColumns","CreatePrestamo","id_cliente","valor_prestamo","tasa_interes","periodo_pago","observacion","type","uiConstants","moment","fetchToken","resp","json","body","ok","formConstants","PrestamoConstants","payload","response","msg","JSON","stringify","UpdatePrestamo","console","DeleteCliente","GetPrestamosByCliente","selectPrestamo","data","GeneratePago","prestamo_id","valor_pagar","valor_interes","checkFin","ReCalculateInteres","fecha_corte","DeletePago","pago_id","GetProximosCobrar","fecha_ini","fecha_fin"],"sourceRoot":""}