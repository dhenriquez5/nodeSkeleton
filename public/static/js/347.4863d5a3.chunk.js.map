{"version":3,"file":"static/js/347.4863d5a3.chunk.js","mappings":"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","sources":["Pages/Dashboard/Pagos.jsx","components/QuickSearch/QsColumns.js","components/inputs/InputBr.jsx","redux/actions/form.actions.js"],"sourcesContent":["import { Button, Divider, Grid, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCleanQuickSearch, uiErrorMessage, uiSetQuickSearchId, uiShowQuickSearch } from '../../redux/actions/ui.actions';\nimport PaidIcon from '@mui/icons-material/Paid';\nimport { InputBr } from '../../components/inputs/InputBr';\nimport { Loading } from '../../components/Loadings/Loading';\nimport ErrorAlert from '../../components/Alerts/ErrorAlert';\nimport { SearchModal } from '../../components/QuickSearch/SearchModal';\nimport { ClientesColumn } from '../../components/QuickSearch/QsColumns';\nimport { Form, Formik } from 'formik';\nimport { NormalButton } from '../../components/buttons/NormalButton';\nimport { GetPrestamosByCliente, InitPrestamo } from '../../redux/actions/prestamo.actions';\nimport { formInit } from '../../redux/actions/form.actions';\nimport { CardPrestamo } from '../../components/Cards/CardPrestamo';\nimport { ModalPagar } from '../../components/Modal/ModalPagar';\n\nconst initialValues = {\n    id_cliente: '',\n    cliente: ''\n}\n\nconst Pagos = () => {\n    const dispatch = useDispatch();\n    const { quickSearchSelected, quickSearchId } = useSelector(state => state.ui);\n    const { lista_prestamos } = useSelector(state => state.prestamo)\n    const [formValues, setFormValues] = useState(null);\n\n    useEffect(() => {\n        if (quickSearchSelected) {\n            if (quickSearchId === 'cliente') return loadData();\n        }\n        setFormValues(null);\n    }, [quickSearchSelected])\n\n    useEffect(() => {\n        dispatch(formInit());\n        dispatch(uiCleanQuickSearch());\n        dispatch(InitPrestamo());\n    }, [dispatch])\n\n    const loadData = () => {\n        setFormValues({ ...initialValues, id_cliente: quickSearchSelected._id, cliente: quickSearchSelected.nombre + \" \" + quickSearchSelected.apellido })\n        dispatch(InitPrestamo());\n    }\n\n    const handleSearch = () => {\n        dispatch(uiSetQuickSearchId('cliente'))\n        dispatch(uiShowQuickSearch());\n    }\n\n    const handleConsultar = () => {\n        if(!quickSearchSelected) return dispatch(uiErrorMessage('Porfavor Seleccione un cliente')); \n        dispatch(GetPrestamosByCliente(quickSearchSelected._id))\n    }\n\n    return (\n        <>\n            <Formik\n                initialValues={formValues || initialValues}\n                onSubmit={(values) => {\n                }}\n                validationSchema={{}}\n                enableReinitialize\n            >\n                {\n                    ({ handleReset, isValid, errors, resetForm }) => (\n                        <Form>\n                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    Pagos\n                                </Typography>\n                                <PaidIcon />\n                            </div>\n                            <Divider />\n                            <Grid container spacing={1}>\n                                <Grid item xs={9} md={6}>\n                                    <InputBr\n                                        handleBr={handleSearch}\n                                        disabled={true}\n                                        margin=\"dense\"\n                                        fullWidth\n                                        id=\"cliente\"\n                                        label=\"Cliente\"\n                                        name=\"cliente\"\n                                    />\n                                </Grid>\n                                <Grid item xs={3} md={2}>\n                                    <NormalButton text=\"Buscar\" onClick={handleConsultar} />\n                                </Grid>\n\n                                <Grid item xs={12} md={12}>\n                                    <CardPrestamo />\n                                </Grid>\n\n                            </Grid>\n\n                            {/* <FloatButton handleSave={handleSave} handleSearch={handleSearch} handleDelete={handleDelete} /> */}\n                        </Form>\n                    )\n                }\n            </Formik>\n            <Loading />\n            <ErrorAlert />\n            {\n                quickSearchId === 'cliente' && <SearchModal title=\"busqueda de clientes\" api=\"clientes/getCliente\" columns={ClientesColumn} />\n            }\n            \n        </>\n    )\n}\n\nexport default Pagos","import moment from \"moment\";\n\nexport const ClientesColumn = [\n    {\n        field: 'cedula',\n        headerName: 'Cedula',\n        width: 150,\n        editable: false,\n    },\n    {\n        field: 'fullName',\n        headerName: 'Nombre',\n        // description: 'This column has a value getter and is not sortable.',\n        // sortable: false,\n        width: 160,\n        valueGetter: (params) =>\n            `${params.row.nombre || ''} ${params.row.apellido || ''}`,\n    },\n    {\n        field: 'telefono',\n        headerName: 'Telefono',\n        width: 150,\n        editable: false,\n    },\n    {\n        field: 'direccion',\n        headerName: 'Direccion',\n        width: 150,\n        editable: false,\n    },\n];\n\nexport const PrestamosColumn = [\n\n    {\n        field: 'fullName',\n        headerName: 'Nombre',\n        // description: 'This column has a value getter and is not sortable.',\n        // sortable: false,\n        width: 160,\n        valueGetter: (params) =>\n            `${params.row.cliente || ''}`,\n    },\n    {\n        field: 'fecha_prestamo',\n        headerName: 'Fecha Prestamo',\n        width: 150,\n        editable: false,\n        valueFormatter: (params) =>params.value.split('T')[0]\n    },\n    {\n        field: 'valor_prestamo',\n        headerName: 'Valor Prestamo',\n        width: 150,\n        editable: false,\n        valueFormatter: (params) => new Intl.NumberFormat('en-US',{ style: 'currency', currency: 'USD' }).format(params.value)\n    },\n    {\n        field: 'tasa_interes',\n        headerName: 'Tasa',\n        width: 100,\n        editable: false,\n    },\n\n]","import { IconButton, InputAdornment, TextField } from '@mui/material';\nimport { ErrorMessage, useField } from 'formik'\nimport React from 'react'\nimport { theme } from '../../configtheme';\nimport { styled } from '@mui/material/styles';\nimport { GridSearchIcon } from '@mui/x-data-grid';\n\n\nconst CustomTextField = styled(TextField)`\n    & label span{\n        color:red!important\n    }\n    & input:disabled{\n        color:red!important;\n        -webkit-text-fill-color: rgba(0, 0, 0, 1.0);\n    }\n    \n`\n\nexport const InputBr = ({ label,handleBr,btn_disabled, ...props }) => {\n    \n    const [field, meta] = useField(props);\n    return (\n        <>  <CustomTextField\n            margin=\"normal\"\n            fullWidth\n            label={label}\n            {...props}\n            {...field}\n            error={(meta.error !== undefined && meta.touched)}\n            InputProps={\n                {\n                    endAdornment:\n                        <IconButton\n                            disabled={btn_disabled}\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleBr}\n                            edge=\"end\"\n                        >\n                            <GridSearchIcon />\n                        </IconButton>\n                }\n            }\n        />\n            <ErrorMessage name={props.name} component=\"span\" style={{ color: theme.palette.valen.error, fontSize: '12px' }} />\n        </>\n\n    )\n}\n","    import { formConstants } from \"../constants/form.constants\"\n    \n    export const formNew = () => {\n        return {\n            type:formConstants.formNew\n        }\n    }\n\n    export const formCancel = () => {\n        return {\n            type:formConstants.formCancel\n        }\n    }\n\n    export const formSave = () => {\n        return {\n            type:formConstants.formSave\n        }\n    }\n\n    export const formSearch = () => {\n        return {\n            type:formConstants.formSearch\n        }\n    }\n\n    export const formDelete = () => {\n        return {\n            type:formConstants.formDelete\n        }\n    }\n\n    export const formInit= () => {\n        return {\n            type:formConstants.formInitial\n        }\n    }\n\n    export const formFetched = () => {\n        return {\n            type:formConstants.formFetched \n        }\n    };"],"names":["initialValues","id_cliente","cliente","dispatch","useDispatch","useSelector","state","ui","quickSearchSelected","quickSearchId","prestamo","lista_prestamos","useState","formValues","setFormValues","useEffect","loadData","formInit","uiCleanQuickSearch","InitPrestamo","_id","nombre","apellido","handleSearch","uiSetQuickSearchId","uiShowQuickSearch","handleConsultar","uiErrorMessage","GetPrestamosByCliente","onSubmit","values","validationSchema","enableReinitialize","handleReset","isValid","errors","resetForm","style","display","justifyContent","alignItems","variant","gutterBottom","container","spacing","item","xs","md","handleBr","disabled","margin","fullWidth","id","label","name","text","onClick","title","api","columns","ClientesColumn","field","headerName","width","editable","valueGetter","params","row","PrestamosColumn","valueFormatter","value","split","Intl","NumberFormat","currency","format","CustomTextField","styled","TextField","InputBr","btn_disabled","props","useField","meta","error","undefined","touched","InputProps","endAdornment","edge","component","color","theme","fontSize","formNew","type","formConstants","formCancel","formFetched"],"sourceRoot":""}