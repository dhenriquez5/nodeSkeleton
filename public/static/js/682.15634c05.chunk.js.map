{"version":3,"file":"static/js/682.15634c05.chunk.js","mappings":"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","sources":["components/Alerts/ErrorAlert.jsx","components/Loadings/Loading.jsx","components/QuickSearch/QsTitle.jsx","components/TableGrid/TableGrid.jsx","components/QuickSearch/SearchModal.jsx","redux/actions/prestamo.actions.js"],"sourcesContent":["import * as React from 'react';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport Stack from '@mui/material/Stack';\nimport { Button, Dialog } from '@mui/material';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiErrorMessage } from '../../redux/actions/ui.actions';\n\nexport default function ErrorAlert() {\n  const {error} = useSelector(state => state.ui);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(uiErrorMessage(null));  \n  }\n\n  return (\n    <>\n      \n      <Dialog open={error!==null}  onClose={handleClick}>\n        <Alert severity=\"error\" onClose={handleClick} >\n          <AlertTitle>Error</AlertTitle>\n          {error}\n        </Alert>\n      </Dialog>\n    </>\n  );\n}","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport './loading.css'\n\nexport const Loading = () => {\n    const { loading } = useSelector(state => state.ui);\n    \n    return (\n        <>\n            {loading && <div className=\"loader text-center\">\n                <div className=\"loader-inner\">\n                    <div className=\"lds-roller mb-3\">\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    </div>\n\n                    <h4 className=\"text-uppercase font-weight-bold\">Loading</h4>\n                </div>\n            </div>}\n        </>\n    )\n}\n","import { IconButton, Typography } from '@mui/material'\nimport { GridCloseIcon } from '@mui/x-data-grid'\nimport React from 'react'\n\nexport const QsTitle = ({ title = '', handleClose = () => { } }) => {\n    return (\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', alignContent: 'center' }}>\n            <Typography style={{ textAlign: 'center', flexGrow: 1 }} id=\"modal-modal-title\" variant=\"h5\" component=\"h4\">\n                {title}\n            </Typography>\n            <IconButton type=\"submit\" sx={{ p: '10px' }} onClick={handleClose} aria-label=\"close\">\n                <GridCloseIcon />\n            </IconButton>\n\n        </div>\n    )\n}\n","import { Alert } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport useCheckMobileScreen from '../../hooks/useCheckMobileScreen';\nimport { uiSelectedQuickSearch } from '../../redux/actions/ui.actions';\n\nexport const TableGrid = ({ columns = [],handleClose=()=>{} }) => {\n\n    const dispatch = useDispatch();\n    const { quickSearchData } = useSelector(state => state.ui);\n    const selectItem = (item) => {\n        getData(item.row);\n    }\n\n    const handleEnter = (params, e) => {\n        e.preventDefault();\n        if (e.key === 'Enter') {\n            getData(params.row);\n        }\n    }\n\n    const getData = (data) => {\n        dispatch(uiSelectedQuickSearch(data));\n        handleClose();\n    }\n\n    return (\n        <>\n            {\n                quickSearchData.length === 0 &&\n                <Alert severity=\"info\">0 Registros Encontrados</Alert>\n            }\n            {\n                quickSearchData && quickSearchData.length > 0 &&\n                <div style={{ height: '25rem', width: 'auto', overflow: 'auto', cursor: 'pointer' }}>\n                    <DataGrid\n                        getRowId={(item) => item._id}\n                        density=\"compact\"\n                        rows={quickSearchData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        loading={false}\n                        onRowClick={selectItem}\n                        onCellKeyDown={(params, event) => { handleEnter(params, event) }}\n                        editMode='row'\n                    />\n                </div>\n            }</>\n    )\n}\n","import React, { useState } from 'react'\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { theme } from '../../configtheme';\nimport useCheckMobileScreen from '../../hooks/useCheckMobileScreen';\nimport { DataGrid, GridCloseIcon } from '@mui/x-data-grid';\nimport { Alert, Container, Divider, Grid, IconButton, Paper, styled, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { TableGrid } from '../TableGrid/TableGrid';\nimport { CardsList } from '../Cards/CardsList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiHideQuickSearch, uiSearchedDataQuickSearch, uiShowQuickSearch } from '../../redux/actions/ui.actions';\nimport { QsTitle } from './QsTitle';\n\n\nconst SearchButton = styled(IconButton)`\n    color:white;\n    :hover{\n        background:${theme.palette.valen.main}\n    }\n`;\n\n\n\nconst rows = [\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n\nexport const SearchModal = ({ title, api = '', columns = [], rows_mobile = [] }) => {\n\n    \n    const isMobile = useCheckMobileScreen();\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        // height: '70vh',\n        transform: 'translate(-50%, -50%)',\n        width: `${isMobile ? '80%' : '60%'}`,\n        bgcolor: 'background.paper',\n        border: `1px solid ${theme.palette.valen.tertiary}`,\n        borderRadius: 8,\n        boxShadow: 24,\n        p: 4,\n    };\n\n    const [inputSearch, setInputSearch] = useState('');\n    const dispatch = useDispatch();\n    const { quickSearch } = useSelector(state => state.ui);\n\n    const handleClose = () => {\n        dispatch(uiHideQuickSearch());\n        setInputSearch('');\n    }\n\n    const handleChange = (e) => {\n        setInputSearch(e.target.value);\n    }\n\n\n    const Searching = (e) => {\n        if (inputSearch.trim().length > 0) {\n            if (e.key === 'Enter') {\n                SearchApiCall();\n            }\n        }\n    }\n\n    const handleSearch = () => {\n        if (inputSearch.trim().length > 0) {\n            SearchApiCall()\n        }\n    }\n\n    const SearchApiCall = () => {\n        dispatch(uiSearchedDataQuickSearch(api,inputSearch));\n    }\n\n    return (\n        <div>\n            <Modal\n                open={quickSearch}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <QsTitle title={title} handleClose={handleClose} />\n                    <Divider sx={{ mt: 2, mb: 2 }} />\n                    <Container component=\"main\" maxWidth=\"lg\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', alignContent: 'center' }} >\n                        <Grid container spacing={2} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', alignContent: 'center' }}>\n                            <Grid item xs={10} md={6}>\n                                <TextField name=\"inputSearch\" autoFocus value={inputSearch} onChange={handleChange} variant=\"standard\" id=\"standard-search\" onKeyDown={Searching} fullWidth label=\"Busqueda\" type=\"search\" />\n                            </Grid>\n                            <Grid item xs={2} md={2}>\n                                <SearchButton onClick={handleSearch} type=\"submit\" sx={{ p: '10px', background: theme.palette.valen.secondary }} aria-label=\"search\">\n                                    <SearchIcon />\n                                </SearchButton>\n                            </Grid>\n\n                            <Grid item xs={12} md={12}>\n                                {\n                                    !isMobile &&\n                                    <TableGrid columns={columns}  handleClose={handleClose} />\n                                }\n                                {\n                                    isMobile &&\n                                    <TableGrid columns={columns}  handleClose={handleClose} />\n                                    // <CardsList columns={columns} rows={rows} />\n                                }\n                               \n                            </Grid>\n                        </Grid>\n                    </Container>\n\n\n                </Box>\n            </Modal>\n        </div>\n    );\n}\n","import { fetchToken } from \"../../helpers/fetch\";\nimport { uiConstants } from \"../constants/ui.constanst\";\nimport { formConstants } from \"../constants/form.constants\";\nimport { PrestamoConstants } from \"../constants/prestamo.constants\";\nimport moment from \"moment\";\n\nexport const CreatePrestamo =({id_cliente,cliente,fecha_prestamo,valor_prestamo,tasa_interes,periodo_pago,observacion})=>{\n    return async(dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            fecha_prestamo = moment(fecha_prestamo).format();  \n            const resp = await fetchToken('prestamos/CreatePrestamo',{id_cliente,cliente,fecha_prestamo,valor_prestamo,tasa_interes,periodo_pago,observacion},'POST');\n            const body = await resp.json();\n            if(body.ok){\n                dispatch({ type: formConstants.formSave});\n                dispatch({ type: PrestamoConstants.Create, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }else{\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n\n        } catch (error) {\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\nexport const UpdatePrestamo = ({_id,id_cliente,cliente,fecha_prestamo,valor_prestamo,tasa_interes,periodo_pago,observacion})=>{\n    return async(dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            fecha_prestamo = moment(fecha_prestamo).format();  \n            const resp = await fetchToken('prestamos/UpdatePrestamo/'+_id,{id_cliente,cliente,fecha_prestamo,valor_prestamo,tasa_interes,periodo_pago,observacion},'PUT');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: formConstants.formSave});\n                dispatch({ type: PrestamoConstants.Create, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\nexport const DeleteCliente = (_id)=>{\n    return async(dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/DeletePrestamo/'+_id,{},'delete');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: formConstants.formDelete});\n                dispatch({ type: PrestamoConstants.Delete, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\nexport const GetPrestamosByCliente = (id_cliente) =>{\n    return async (dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/getPrestamoByCliente/'+id_cliente,{});\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: PrestamoConstants.searchByClientId, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\nexport const InitPrestamo = ()=>{\n    return (dispatch)=>{\n        dispatch({ type: PrestamoConstants.Initial})\n    }\n}\n\nexport const selectPrestamo = (data)=>{\n    return (dispatch)=>{\n        dispatch({ type: PrestamoConstants.Read, payload:data})\n    }\n}\n\nexport const GeneratePago =  (prestamo_id,valor_pagar,fecha_pago,valor_interes,checkFin) =>{\n    return async(dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/generatePago',{prestamo_id,valor_pagar,fecha_pago,valor_interes,checkFin},\"POST\");\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: PrestamoConstants.GeneratePago,payload:body.response});\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\nexport const ReCalculateInteres= (prestamo_id,fecha_corte)=>{\n    return async(dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/reCalcularInteres',{prestamo_id,fecha_corte},\"post\");\n            const body = await resp.json();\n            if (body.ok) {\n                console.log(body.response);\n                dispatch({ type: PrestamoConstants.reCalculateInteres, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\n\nexport const DeletePago = (pago_id,prestamo_id) => {\n    return async(dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/deletePago',{pago_id,prestamo_id},\"POST\");\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: PrestamoConstants.deletePago ,payload:body.response});\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\n\nexport const GetPrestamosActivos = ()=>{\n    return async (dispatch) =>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/getPrestamoActivo',{});\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: PrestamoConstants.getPrestamosActivos ,payload:body.response});\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\nexport const GetProximosCobrar=(fecha_ini,fecha_fin)=>{\n    return async (dispatch)=>{\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('prestamos/getProximosCobrar',{fecha_ini,fecha_fin},\"POST\");\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: PrestamoConstants.searchByClientId ,payload:body.response});\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}"],"names":["ErrorAlert","error","useSelector","state","ui","dispatch","useDispatch","handleClick","uiErrorMessage","open","onClose","severity","Loading","loading","className","QsTitle","title","handleClose","style","display","justifyContent","alignItems","alignContent","textAlign","flexGrow","id","variant","component","type","sx","p","onClick","TableGrid","columns","quickSearchData","getData","data","uiSelectedQuickSearch","length","Alert","height","width","overflow","cursor","DataGrid","getRowId","item","_id","density","rows","pageSize","rowsPerPageOptions","onRowClick","row","onCellKeyDown","params","event","e","preventDefault","key","handleEnter","editMode","SearchButton","styled","IconButton","theme","SearchModal","api","isMobile","rows_mobile","useCheckMobileScreen","position","top","left","transform","bgcolor","border","borderRadius","boxShadow","useState","inputSearch","setInputSearch","quickSearch","uiHideQuickSearch","SearchApiCall","uiSearchedDataQuickSearch","Modal","Box","Divider","mt","mb","Container","maxWidth","container","spacing","xs","md","TextField","name","autoFocus","value","onChange","target","onKeyDown","trim","fullWidth","label","background","Search","CreatePrestamo","id_cliente","cliente","fecha_prestamo","valor_prestamo","tasa_interes","periodo_pago","observacion","uiConstants","moment","format","fetchToken","resp","json","body","ok","formConstants","PrestamoConstants","payload","response","msg","JSON","stringify","UpdatePrestamo","console","DeleteCliente","GetPrestamosByCliente","InitPrestamo","selectPrestamo","GeneratePago","prestamo_id","valor_pagar","fecha_pago","valor_interes","checkFin","ReCalculateInteres","fecha_corte","log","DeletePago","pago_id","GetPrestamosActivos","GetProximosCobrar","fecha_ini","fecha_fin"],"sourceRoot":""}