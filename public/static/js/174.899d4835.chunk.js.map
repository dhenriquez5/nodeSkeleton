{"version":3,"file":"static/js/174.899d4835.chunk.js","mappings":"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","sources":["components/Modal/CustomModal.jsx","components/inputs/NumberText.jsx","components/Cards/ItemPago.jsx","components/Cards/CardPagos.jsx","components/Cards/CardPrestamo.jsx","components/inputs/InputNormalNumber.jsx","components/Modal/ModalPagar.jsx","components/buttons/NormalButton.jsx"],"sourcesContent":["import { Divider, Modal, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport React from 'react'\nimport { theme } from '../../configtheme';\nimport useCheckMobileScreen from '../../hooks/useCheckMobileScreen';\nimport { QsTitle } from '../QuickSearch/QsTitle';\n\n\n\nexport const CustomModal = ({ open, handleClose, children, title }) => {\n    const isMobile = useCheckMobileScreen();\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        height: '80vh',\n        overflow: 'auto',\n        transform: 'translate(-50%, -50%)',\n        width: `${isMobile ? '90%' : '70%'}`,\n        bgcolor: 'background.paper !important',\n        border: `1px solid ${theme.palette.valen.tertiary}`,\n        borderRadius: 8,\n        boxShadow: 24,\n        p: 4,\n        background: 'white'\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        >\n            <Box sx={style}>\n                <QsTitle title={title} handleClose={handleClose} />\n                <Divider sx={{ mt: 2, mb: 2 }} />\n                {children}\n            </Box>\n        </Modal>\n    )\n}\n","import { Typography } from '@mui/material'\nimport React from 'react'\n\nexport const NumberText = ({value}) => {\n  return (\n    <>\n    {new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(value||0)}\n    </>\n  )\n}\n","import { Grid, Paper, Table, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material'\nimport React from 'react'\nimport { NormalButton } from '../buttons/NormalButton'\nimport { NumberText } from '../inputs/NumberText'\n\nexport const ItemPago = ({ pago, deletePago }) => {\n    return (\n        <TableRow\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n        >\n            <TableCell component=\"th\" scope=\"row\">\n                <NumberText value={pago.valor_pago} />\n            </TableCell>\n            <TableCell >{pago.fecha_pago.split('T')[0]}</TableCell>\n            <TableCell >\n                <NumberText value={pago.valor_capital} />\n            </TableCell>\n            <TableCell >\n                <NumberText value={pago.valor_interes} />\n            </TableCell>\n            <TableCell >\n                <NormalButton fullWidth={false} text=\"Eliminar\" sx={{background:'red'}} onClick={()=>deletePago(pago._id)} />\n            </TableCell>\n        </TableRow>\n\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ItemPago } from './ItemPago';\nimport { Grid, Paper, Table, TableCell, TableContainer, TableHead, TableRow, Card, CardContent, Typography, TableBody, CardHeader } from '@mui/material'\nimport { NumberText } from '../inputs/NumberText';\nimport { DeletePago, GetPrestamosByCliente, GetProximosCobrar } from '../../redux/actions/prestamo.actions';\n\nexport const CardPagos = ({fecha_ini,fecha_fin}) => {\n    const dispatch = useDispatch();\n    const { prestamo } = useSelector(state => state.prestamo);\n    const { modalOpen,optionSelected } = useSelector(state => state.ui);\n\n\n    const deletePago = async(pago_id) => {\n        await dispatch(DeletePago(pago_id,prestamo._id));\n        if(optionSelected==='Pagos') await dispatch(GetPrestamosByCliente(prestamo.id_cliente));\n        if(optionSelected==='Proximos a cobrar')await dispatch(GetProximosCobrar(fecha_ini,fecha_fin))\n\n    }\n\n    return (\n        <>\n            <Card sx={{ mt: 2 }} elevation={3}>\n                <CardHeader> Info del prestamo</CardHeader>\n                <CardContent>\n                    <Typography>Cliente: {prestamo.cliente}</Typography>\n                    <Typography>Fecha: {prestamo.fecha_prestamo.split('T')[0]}</Typography>\n                    <Typography>Valor: {new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(prestamo.valor_prestamo)}</Typography>\n                    <Typography>Saldo: <NumberText value={prestamo.capital_actual} /> </Typography>\n                    <>\n                        <TableContainer component={Paper}>\n                            <Table aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Pago</TableCell>\n                                        <TableCell >Fecha</TableCell>\n                                        <TableCell >Capital</TableCell>\n                                        <TableCell >Interes</TableCell>\n                                        <TableCell ></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {prestamo?.pagos && prestamo?.pagos.map((pago, index) => (\n                                        <ItemPago key={index} pago={pago} deletePago={deletePago} />\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </>\n                </CardContent>\n            </Card>\n        </>\n    )\n}\n","import { Card, CardContent, Typography } from '@mui/material';\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectPrestamo } from '../../redux/actions/prestamo.actions';\nimport { uiOpenModal } from '../../redux/actions/ui.actions';\nimport { NormalButton } from '../buttons/NormalButton';\nimport { ModalPagar } from '../Modal/ModalPagar';\nimport { CustomModal } from '../Modal/CustomModal';\nimport { SearchModal } from '../QuickSearch/SearchModal';\nimport { useState } from 'react';\nimport { CardPagos } from './CardPagos';\n\nexport const CardPrestamo = ({fecha_ini,fecha_fin}) => {\n    const dispatch = useDispatch();\n    const { lista_prestamos } = useSelector(state => state.prestamo);\n    const [showPagos, setShowPagos] = useState(false);\n    const OpenPagar = (data) => {\n        dispatch(selectPrestamo(data))\n        dispatch(uiOpenModal());\n    }\n\n    const VerPagos = (data) => {\n        dispatch(selectPrestamo(data))\n        setShowPagos(true);\n    }\n\n    const closeModal = () => {\n        setShowPagos(false);\n    }\n\n    return (\n        <>\n            {\n                lista_prestamos.length > 0 && lista_prestamos.map(p =>\n                (\n                    <Card sx={{ mt: 2 }} key={p._id} elevation={3}>\n                        <CardContent>\n                            <Typography>Cliente: {p.cliente}</Typography>\n                            <Typography>Fecha Prestamo: {p.fecha_prestamo.split('T')[0]}</Typography>\n                            <Typography>Valor Prestamo: {new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(p.valor_prestamo)}</Typography>\n                            <Typography>Capital Actual: {new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(p.capital_actual)}</Typography>\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <Typography>Tasa Interes: {p.tasa_interes}%</Typography>\n                            </div>\n                            <div style={{ display: 'flex', justifyContent: 'end', gap: 4 }} >\n                                <NormalButton fullWidth={false} text=\"Pagar\" onClick={() => OpenPagar(p)} />\n                                <NormalButton fullWidth={false} text=\"Ver pagos\" onClick={() => VerPagos(p)} />\n                            </div>\n                        </CardContent>\n                    </Card>\n                ))\n            }\n            <ModalPagar fecha_ini={fecha_ini} fecha_fin={fecha_fin} title=\"Pagar Prestamo\" />\n            <CustomModal open={showPagos} handleClose={closeModal} title={'Pagos'} >\n                <CardPagos fecha_ini={fecha_ini} fecha_fin={fecha_fin} />\n            </CustomModal>\n        </>\n    )\n}\n","import { TextField } from '@mui/material';\nimport React from 'react'\nimport { theme } from '../../configtheme';\nimport { styled } from '@mui/material/styles';\nimport { NumericFormat } from 'react-number-format';\n\n\nconst CustomTextField = styled(TextField)`\n    & label span{\n        color:red!important\n    }\n    & input:disabled{\n        color:red!important;\n        -webkit-text-fill-color: rgba(0, 0, 0, 1.0);\n    }\n`\n\nconst NumberFormatCustom = React.forwardRef(function NumberFormatCustom(props, ref) {\n    const { onChange, ...other } = props;\n    return (\n        <NumericFormat\n            {...other}\n            getInputRef={ref}\n            onValueChange={(values) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            thousandSeparator\n            valueIsNumericString\n        />\n    );\n});\n\nexport const InputNormalNumber = ({ label, ...props }) => {\n    return (\n        <>  <CustomTextField\n            margin=\"normal\"\n            fullWidth\n            label={label}\n            {...props}\n            InputProps={{\n                inputComponent: NumberFormatCustom,\n                inputProps: { ...props }\n            }}\n        />\n        </>\n\n    )\n}\n","import { Container, Divider, Grid, IconButton, TextField, styled, Typography, Checkbox } from '@mui/material';\nimport Modal from '@mui/material/Modal';\nimport { Box } from '@mui/system'\nimport moment from 'moment';\nimport React from 'react'\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { theme } from '../../configtheme'\nimport useCheckMobileScreen from '../../hooks/useCheckMobileScreen'\nimport { GeneratePago, GetPrestamosByCliente, GetProximosCobrar, ReCalculateInteres } from '../../redux/actions/prestamo.actions';\nimport { uiCloseModal, uiErrorMessage } from '../../redux/actions/ui.actions'\nimport { NormalButton } from '../buttons/NormalButton';\nimport { InputNormalNumber } from '../inputs/InputNormalNumber';\nimport { QsTitle } from '../QuickSearch/QsTitle'\n\n\n\nexport const ModalPagar = ({ title, fecha_ini, fecha_fin }) => {\n    const isMobile = useCheckMobileScreen();\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        // height: '70vh',\n        transform: 'translate(-50%, -50%)',\n        width: `${isMobile ? '80%' : '60%'}`,\n        bgcolor: 'background.paper !important',\n        border: `1px solid ${theme.palette.valen.tertiary}`,\n        borderRadius: 8,\n        boxShadow: 24,\n        p: 4,\n        background: 'white'\n    };\n\n    const [valor_pagar, setValor_pagar] = useState('');\n    const [valor_interes, setValor_interes] = useState('');\n    const [fecha_pago, setFecha_pago] = useState('');\n    const [fecha_ultimo_pago, setFecha_ultimo_pago] = useState('');\n    const [check, setCheck] = useState(false);\n    const [checkFin, setCheckFin] = useState(false);\n    const dispatch = useDispatch();\n    const { modalOpen, optionSelected } = useSelector(state => state.ui);\n    const { prestamo } = useSelector(state => state.prestamo);\n\n    useEffect(() => {\n        getFechaUltimoPago();\n    }, [prestamo])\n\n    useEffect(() => {\n        if (!modalOpen) {\n            setFecha_pago(moment().format('YYYY-MM-DD'));\n            setValor_pagar('');\n            setValor_interes('');\n            setFecha_ultimo_pago('');\n            setCheck(false);\n            setCheckFin(false);\n        }\n    }, [modalOpen])\n\n\n    const getFechaUltimoPago = () => {\n        if (prestamo?.pagos?.length > 0) {\n            let maxDateObject = prestamo.pagos.reduce((prev, curr) => {\n                let prevDate = new Date(prev.date);\n                let currDate = new Date(curr.date);\n                return (prevDate > currDate) ? prev : curr;\n            });\n            setFecha_ultimo_pago(maxDateObject?.fecha_pago);\n        }\n    }\n\n    const handleChange = (e) => {\n        setValor_pagar(e.target.value);\n    }\n\n    const handleChangeInteres = e => setValor_interes(e.target.value);\n\n    const handleChangeFechaPago = (e) => {\n        setFecha_pago(e.target.value);\n    }\n\n    const selectInteres = () => {\n        setCheck(prev => !prev);\n        const valor_pagar = prestamo.capital_actual * (prestamo.tasa_interes / 100)\n        if (!check) {\n            setValor_pagar(valor_pagar);\n            setValor_interes(valor_pagar);\n        } else {\n            setValor_pagar('');\n            setValor_interes('');\n        }\n    }\n\n    const selectFinPrestamo = () => {\n        setCheckFin(prev => !prev);\n    }\n\n    const RecalcularInteres = (e) => {\n        if (!fecha_pago) return dispatch(uiErrorMessage('Digite la fecha de pago correctamente'))\n        dispatch(ReCalculateInteres(prestamo._id, moment(fecha_pago)));\n    }\n\n    const handleClose = () => {\n        dispatch(uiCloseModal());\n    }\n\n    const handlePagar = async (e) => {\n        // e.preventDefault();\n        if (!valor_pagar) return dispatch(uiErrorMessage(\"Digite correctamente el valor a pagar\"));\n        if (!fecha_pago) return dispatch(uiErrorMessage(\"Digite correctamente la fecha de pago\"));\n        if (!valor_interes) return dispatch(uiErrorMessage(\"Digite correctamente el valor del interes\"));\n\n        await dispatch(GeneratePago(prestamo._id, valor_pagar, fecha_pago, valor_interes, checkFin));\n        if (optionSelected === 'Pagos') await dispatch(GetPrestamosByCliente(prestamo.id_cliente));\n        if (optionSelected === 'Proximos a cobrar') await dispatch(GetProximosCobrar(fecha_ini, fecha_fin))\n        handleClose();\n    }\n    function isEmpty(obj) {\n        return Object.keys(obj).length === 0;\n    }\n    return (\n        <div>\n            {\n                !isEmpty(prestamo) && (\n                    <Modal\n                        open={modalOpen}\n                        onClose={handleClose}\n                        aria-labelledby=\"modal-modal-title\"\n                        aria-describedby=\"modal-modal-description\"\n                    >\n                        <Box sx={style}>\n                            <QsTitle title={title} handleClose={handleClose} />\n                            <Divider sx={{ mt: 2, mb: 2 }} />\n                            <Container component=\"main\" maxWidth=\"lg\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', alignContent: 'center' }} >\n                                <Grid container spacing={2} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', alignContent: 'center' }}>\n                                    <Grid item xs={12} md={6}>\n                                        <Typography>Cliente: {check} {prestamo.cliente}</Typography>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Typography>Fecha prestamo: {prestamo.fecha_prestamo.split('T')[0]}</Typography>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Typography>Valor Prestamo: {new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(prestamo.valor_prestamo)}</Typography>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Typography>Capital Actual: {new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(prestamo.capital_actual)}</Typography>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <Typography> Interes Real : {new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(prestamo.valor_interes)}</Typography>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <Typography > <b>Fecha Corte</b>: {fecha_ultimo_pago.split('T')[0]}</Typography>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={3}>\n                                        <TextField\n                                            type=\"date\"\n                                            margin=\"dense\"\n                                            id=\"fecha_pago\"\n                                            label=\"Fecha pago\"\n                                            name=\"fecha_pago\"\n                                            InputLabelProps={{ shrink: true }}\n                                            onChange={handleChangeFechaPago}\n                                            onBlur={RecalcularInteres}\n                                            value={fecha_pago}\n                                            prefix=\"$\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={4}>\n                                        <InputNormalNumber\n                                            margin=\"dense\"\n                                            id=\"valor_pagar\"\n                                            label=\"Valor a Pagar\"\n                                            name=\"valor_pagar\"\n                                            onChange={handleChange}\n                                            value={valor_pagar}\n                                            prefix=\"$\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={4} style={{ display: 'flex', justifyContent: 'center' }}>\n                                        <InputNormalNumber\n                                            margin=\"dense\"\n                                            id=\"valor_interes\"\n                                            label=\"Valor Interes\"\n                                            name=\"valor_interes\"\n                                            onChange={handleChangeInteres}\n                                            value={valor_interes}\n                                            prefix=\"$\"\n                                        />\n                                        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\n                                            <span>{prestamo.tasa_interes}%</span>\n                                            <Checkbox onChange={selectInteres} value={check} />\n                                        </div>\n                                    </Grid>\n\n                                    <NormalButton text=\"Pagar\" onClick={handlePagar} />\n                                    <Checkbox title='Al seleccionar aqui se da el credito por pagado' onChange={selectFinPrestamo} value={checkFin} />\n                                    Finiquitar Prestamo\n                                </Grid>\n                            </Container>\n\n\n                        </Box>\n                    </Modal>\n                )\n            }\n\n        </div>\n    );\n}\n","import { Button } from '@mui/material'\nimport React from 'react'\nimport { theme } from '../../configtheme'\nimport './button.css'\n\n\n\nexport const NormalButton = ({ onClick, text, type, style, ...props }) => {\n    return (\n        <Button\n            onClick={onClick}\n            className=\"button\"\n            type={type}\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2, bgcolor: theme.palette.valen.secondary }}\n            {...props}\n        >\n            {text}\n        </Button>\n    )\n}\n"],"names":["CustomModal","open","handleClose","children","title","isMobile","useCheckMobileScreen","style","position","top","left","height","overflow","transform","width","bgcolor","border","theme","borderRadius","boxShadow","p","background","Modal","onClose","Box","sx","QsTitle","Divider","mt","mb","NumberText","value","Intl","NumberFormat","currency","format","ItemPago","pago","deletePago","TableRow","TableCell","component","scope","valor_pago","fecha_pago","split","valor_capital","valor_interes","NormalButton","fullWidth","text","onClick","_id","CardPagos","fecha_ini","fecha_fin","dispatch","useDispatch","prestamo","useSelector","state","ui","optionSelected","modalOpen","pago_id","DeletePago","GetPrestamosByCliente","id_cliente","GetProximosCobrar","Card","elevation","CardHeader","CardContent","Typography","cliente","fecha_prestamo","valor_prestamo","capital_actual","TableContainer","Paper","Table","TableHead","TableBody","pagos","map","index","CardPrestamo","lista_prestamos","useState","showPagos","setShowPagos","length","display","justifyContent","tasa_interes","gap","data","selectPrestamo","uiOpenModal","ModalPagar","CustomTextField","styled","TextField","NumberFormatCustom","React","props","ref","onChange","other","getInputRef","onValueChange","values","target","name","thousandSeparator","valueIsNumericString","InputNormalNumber","label","margin","InputProps","inputComponent","inputProps","valor_pagar","setValor_pagar","setValor_interes","setFecha_pago","fecha_ultimo_pago","setFecha_ultimo_pago","check","setCheck","checkFin","setCheckFin","useEffect","getFechaUltimoPago","moment","obj","maxDateObject","reduce","prev","curr","Date","date","uiCloseModal","handlePagar","e","uiErrorMessage","GeneratePago","Object","keys","Container","maxWidth","alignItems","alignContent","Grid","container","spacing","item","xs","md","type","id","InputLabelProps","shrink","onBlur","ReCalculateInteres","prefix","flexDirection","Checkbox","Button","className","variant"],"sourceRoot":""}