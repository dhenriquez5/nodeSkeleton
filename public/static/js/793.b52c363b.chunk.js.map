{"version":3,"file":"static/js/793.b52c363b.chunk.js","mappings":"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","sources":["Pages/Dashboard/Cliente.jsx","redux/actions/cliente.actions.js"],"sourcesContent":["import { Box, Divider, Grid, Typography, } from '@mui/material'\nimport * as Yup from 'yup';\nimport { Form, Formik } from 'formik'\nimport React, { useEffect } from 'react'\nimport { InputText } from '../../components/inputs/InputText'\nimport GroupIcon from '@mui/icons-material/Group';\nimport { CircularButton } from '../../components/buttons/CircularButton';\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { formCancel, formFetched, formInit, formNew } from '../../redux/actions/form.actions';\nimport { SearchModal } from '../../components/QuickSearch/SearchModal';\nimport { uiCleanQuickSearch, uiShowQuickSearch } from '../../redux/actions/ui.actions';\nimport { theme } from '../../configtheme';\nimport { SaveOutlined } from '@mui/icons-material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Loading } from '../../components/Loadings/Loading';\nimport ErrorAlert from '../../components/Alerts/ErrorAlert';\nimport { CreateCliente, DeleteCliente, UpdateCliente } from '../../redux/actions/cliente.actions';\nimport { ClientesColumn } from '../../components/QuickSearch/QsColumns';\nimport { useState } from 'react';\n\nconst fabStyle = {\n    // position: 'fixed',\n    color: 'white',\n    backgroundColor: `${theme.palette.valen.secondary}`,\n    fontSize: '24px',\n};\nconst fabStyle2 = {\n    // position: 'fixed',\n    color: 'white',\n    backgroundColor: `${theme.palette.valen.error}`,\n    fontSize: '24px',\n};\n\n\nconst initialValues = {\n    cedula: '',\n    nombre: '',\n    apellido: '',\n    telefono: '',\n    direccion: '',\n    email: '',\n    empresa: '',\n    direccion_empresa: '',\n    observacion: '',\n}\n\nconst validation = Yup.object({\n    cedula: Yup.string().max(15, 'La cedula debe contener 15 caracteres o menos').required('La cedula es requerida'),\n    nombre: Yup.string().min(3, 'Debe tener al menos 3 caracteres').required('El nombre debe ser requerido'),\n    apellido: Yup.string().required('El apellido debe ser requerido'),\n    telefono: Yup.string().required('El telefono debe ser requerido'),\n    direccion: Yup.string().required('La direccion debe ser requerida'),\n    email: Yup.string(),\n    empresa: Yup.string(),\n    direccion_empresa: Yup.string(),\n})\n\nconst Cliente = () => {\n    const dispatch = useDispatch();\n    const { cancel, newE, disabled, save, canDelete } = useSelector(state => state.form);\n    const [formValues, setFormValues] = useState(null)\n    const { quickSearchSelected } = useSelector(state => state.ui);\n\n    useEffect(() => {\n        if (quickSearchSelected) {\n            return loadData();\n        }\n        setFormValues(null);\n    }, [quickSearchSelected])\n\n    useEffect(() => {\n        dispatch(formInit());\n        dispatch(uiCleanQuickSearch());\n    }, [dispatch])\n\n    const handleNew = (e) => {\n        dispatch(formNew());\n        dispatch(uiCleanQuickSearch());\n    }\n    const handleCancel = (e) => {\n        dispatch(formCancel());\n        dispatch(uiCleanQuickSearch());\n    }\n\n    const handleSubmit = (data) => {\n        if (data._id) {\n            return dispatch(UpdateCliente(data))\n        }\n        dispatch(CreateCliente(data))\n    };\n\n    const handleSearch = () => {\n        dispatch(uiShowQuickSearch());\n    }\n\n    const handleDelete = () => {\n        dispatch(DeleteCliente(quickSearchSelected._id))\n        dispatch(uiCleanQuickSearch());\n    }\n\n    const loadData = () => {\n        setFormValues(quickSearchSelected);\n        dispatch(formFetched());\n    };\n    return (\n        <>\n            <Formik\n                initialValues={formValues || initialValues}\n                onSubmit={(values) => {\n                    // console.log(values);\n                    handleSubmit(values);\n                }}\n                validationSchema={validation}\n                enableReinitialize\n            >\n                {\n                    ({ handleReset, isValid, errors, resetForm }) => (\n                        <Form>\n                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    Cliente\n                                </Typography>\n                                {newE && (\n                                    <>\n                                        <CircularButton type=\"reset\" text=\"Agregar\" Icon={SpeedDialIcon} handleClick={() => { handleNew(); handleReset(); }} />\n                                        <CircularButton type=\"button\" text=\"Buscar\" Icon={SearchIcon} handleClick={handleSearch} />\n                                    </>\n                                )}\n                                {cancel && <CircularButton type=\"reset\" text=\"Cancelar\" Icon={CloseIcon} handleClick={() => { handleCancel(); handleReset(); }} />}\n                                <GroupIcon />\n                            </div>\n                            <Divider />\n                            <Grid container spacing={1}>\n                                <Grid item xs={12} md={3}>\n                                    <InputText\n                                        disabled={disabled}\n                                        margin=\"dense\"\n                                        fullWidth\n                                        id=\"cedula\"\n                                        label=\"Cedula\"\n                                        name=\"cedula\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <InputText\n                                        disabled={disabled}\n                                        margin=\"dense\"\n                                        fullWidth\n                                        id=\"nombre\"\n                                        label=\"Nombres\"\n                                        name=\"nombre\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <InputText\n                                        disabled={disabled}\n                                        margin=\"dense\"\n                                        fullWidth\n                                        id=\"apellido\"\n                                        label=\"Apellidos\"\n                                        name=\"apellido\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={3}>\n                                    <InputText\n                                        disabled={disabled}\n                                        margin=\"dense\"\n                                        fullWidth\n                                        id=\"telefono\"\n                                        label=\"Telefono\"\n                                        name=\"telefono\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <InputText\n                                        disabled={disabled}\n                                        margin=\"dense\"\n                                        fullWidth\n                                        id=\"direccion\"\n                                        label=\"Direccion\"\n                                        name=\"direccion\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={5}>\n                                    <InputText\n                                        disabled={disabled}\n                                        margin=\"dense\"\n                                        fullWidth\n                                        id=\"email\"\n                                        label=\"Email\"\n                                        name=\"email\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <InputText\n                                        disabled={disabled}\n                                        margin=\"dense\"\n                                        fullWidth\n                                        id=\"empresa\"\n                                        label=\"Empresa\"\n                                        name=\"empresa\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <InputText\n                                        disabled={disabled}\n                                        margin=\"dense\"\n                                        fullWidth\n                                        id=\"direccion_empresa\"\n                                        label=\"Direccion Empresa\"\n                                        name=\"direccion_empresa\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <InputText\n                                        disabled={disabled}\n                                        margin=\"dense\"\n                                        fullWidth\n                                        id=\"observacion\"\n                                        label=\"Observacion\"\n                                        name=\"observacion\"\n                                    />\n                                </Grid>\n                            </Grid>\n\n                            <Box>\n                                <div style={{ display: 'flex', justifyContent: 'space-around', marginTop:'10px' }}>\n                                    {\n                                        canDelete &&\n                                        <CircularButton size=\"large\" style={fabStyle2} type=\"button\" text=\"Eliminar\" Icon={DeleteIcon} handleClick={()=>{handleDelete(); handleReset();}} />\n                                    }\n                                    {\n                                        save &&\n                                        <CircularButton size=\"large\" style={fabStyle} type=\"submit\" text=\"Guardar Cambios\" Icon={SaveOutlined} />\n                                    }\n                                </div>\n\n\n                            </Box>\n                            {/* <FloatButton handleSave={handleSave} handleSearch={handleSearch} handleDelete={handleDelete} /> */}\n                        </Form>\n                    )\n                }\n            </Formik>\n            <Loading />\n            <ErrorAlert />\n            <SearchModal title=\"busqueda de clientes\" api=\"clientes/getCliente\" columns={ClientesColumn} />\n        </>\n    )\n}\n\nexport default Cliente","import { fetchToken } from \"../../helpers/fetch\";\nimport { uiConstants } from \"../constants/ui.constanst\"\nimport { formConstants } from \"../constants/form.constants\"\nimport { clienteConstants } from \"../constants/cliente.constants\"\n\n\nexport const CreateCliente =({cedula,nombre,apellido,direccion,telefono,email,empresa,direccion_empresa,observacion})=>{\n    return async (dispatch) => {\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('clientes/CreateCliente',{cedula,nombre,apellido,direccion,telefono,email,empresa,direccion_empresa,observacion},'POST');\n            const body = await resp.json();\n            \n            if (body.ok) {\n                dispatch({ type: formConstants.formSave});\n                dispatch({ type: clienteConstants.Create, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n            \n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\n\nexport const UpdateCliente = ({_id,cedula,nombre,apellido,direccion,telefono,email,empresa,direccion_empresa,observacion})=>{\n    return async (dispatch) => {\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('clientes/UpdateCliente/'+_id,{cedula,nombre,apellido,direccion,telefono,email,empresa,direccion_empresa,observacion},'PUT');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: formConstants.formSave});\n                dispatch({ type: clienteConstants.Create, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n            \n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\n\nexport const DeleteCliente = (_id)=>{\n    return async (dispatch) => {\n        try {\n            dispatch({ type: uiConstants.uiOpenLoading });\n            const resp = await fetchToken('clientes/DeleteCliente/'+_id,{},'delete');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch({ type: formConstants.formDelete});\n                dispatch({ type: clienteConstants.Delete, payload: body.response });\n                dispatch({ type: uiConstants.uiErrorMessage, payload: null });\n            }\n            else {\n                dispatch({ type: uiConstants.uiErrorMessage, payload: body.msg });\n            }\n            dispatch({ type: uiConstants.uiCloseLoading });\n            \n        } catch (error) {\n            console.error(error);\n            dispatch({ type: uiConstants.uiCloseLoading });\n            dispatch({ type: uiConstants.uiErrorMessage, payload: JSON.stringify(error) })\n        }\n    }\n}\n\n\n\n"],"names":["fabStyle","color","backgroundColor","theme","fontSize","fabStyle2","initialValues","cedula","nombre","apellido","telefono","direccion","email","empresa","direccion_empresa","observacion","validation","Yup","max","required","min","dispatch","useDispatch","useSelector","state","form","cancel","newE","disabled","save","canDelete","useState","formValues","setFormValues","quickSearchSelected","ui","useEffect","loadData","formInit","uiCleanQuickSearch","handleSubmit","data","_id","type","uiConstants","fetchToken","resp","json","body","ok","formConstants","clienteConstants","payload","response","msg","console","error","JSON","stringify","UpdateCliente","CreateCliente","handleSearch","uiShowQuickSearch","handleDelete","formFetched","onSubmit","values","validationSchema","enableReinitialize","handleReset","isValid","errors","resetForm","style","display","justifyContent","alignItems","Typography","variant","gutterBottom","CircularButton","text","Icon","SpeedDialIcon","handleClick","formNew","SearchIcon","CloseIcon","formCancel","Group","Divider","Grid","container","spacing","item","xs","md","InputText","margin","fullWidth","id","label","name","Box","marginTop","size","DeleteIcon","SaveOutlined","Loading","ErrorAlert","SearchModal","title","api","columns","ClientesColumn"],"sourceRoot":""}